$date
	Wed Oct  2 01:40:29 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module demux2_test $end
$var wire 1 ! y1 $end
$var wire 1 " y0 $end
$var reg 1 # a $end
$var reg 1 $ s $end
$scope module uut $end
$var wire 1 # a $end
$var wire 1 $ s $end
$var wire 1 " y0 $end
$var wire 1 ! y1 $end
$upscope $end
$upscope $end
$scope module demux4_test $end
$var wire 1 % y3 $end
$var wire 1 & y2 $end
$var wire 1 ' y1 $end
$var wire 1 ( y0 $end
$var reg 1 ) a $end
$var reg 1 * s0 $end
$var reg 1 + s1 $end
$scope module uut $end
$var wire 1 ) a $end
$var wire 1 * s0 $end
$var wire 1 + s1 $end
$var wire 1 % y3 $end
$var wire 1 & y2 $end
$var wire 1 ' y1 $end
$var wire 1 ( y0 $end
$var wire 1 , q $end
$var wire 1 - p $end
$scope module D1 $end
$var wire 1 ) a $end
$var wire 1 + s $end
$var wire 1 - y0 $end
$var wire 1 , y1 $end
$upscope $end
$scope module D2 $end
$var wire 1 - a $end
$var wire 1 * s $end
$var wire 1 ( y0 $end
$var wire 1 ' y1 $end
$upscope $end
$scope module D3 $end
$var wire 1 , a $end
$var wire 1 * s $end
$var wire 1 & y0 $end
$var wire 1 % y1 $end
$upscope $end
$upscope $end
$upscope $end
$scope module demux8_test $end
$var wire 1 . y7 $end
$var wire 1 / y6 $end
$var wire 1 0 y5 $end
$var wire 1 1 y4 $end
$var wire 1 2 y3 $end
$var wire 1 3 y2 $end
$var wire 1 4 y1 $end
$var wire 1 5 y0 $end
$var reg 1 6 a $end
$var reg 1 7 s0 $end
$var reg 1 8 s1 $end
$var reg 1 9 s2 $end
$scope module uut $end
$var wire 1 6 a $end
$var wire 1 7 s0 $end
$var wire 1 8 s1 $end
$var wire 1 9 s2 $end
$var wire 1 . y7 $end
$var wire 1 / y6 $end
$var wire 1 0 y5 $end
$var wire 1 1 y4 $end
$var wire 1 2 y3 $end
$var wire 1 3 y2 $end
$var wire 1 4 y1 $end
$var wire 1 5 y0 $end
$var wire 1 : q $end
$var wire 1 ; p $end
$scope module D1 $end
$var wire 1 6 a $end
$var wire 1 9 s $end
$var wire 1 ; y0 $end
$var wire 1 : y1 $end
$upscope $end
$scope module D2 $end
$var wire 1 ; a $end
$var wire 1 7 s0 $end
$var wire 1 8 s1 $end
$var wire 1 2 y3 $end
$var wire 1 3 y2 $end
$var wire 1 4 y1 $end
$var wire 1 5 y0 $end
$var wire 1 < q $end
$var wire 1 = p $end
$scope module D1 $end
$var wire 1 ; a $end
$var wire 1 8 s $end
$var wire 1 = y0 $end
$var wire 1 < y1 $end
$upscope $end
$scope module D2 $end
$var wire 1 = a $end
$var wire 1 7 s $end
$var wire 1 5 y0 $end
$var wire 1 4 y1 $end
$upscope $end
$scope module D3 $end
$var wire 1 < a $end
$var wire 1 7 s $end
$var wire 1 3 y0 $end
$var wire 1 2 y1 $end
$upscope $end
$upscope $end
$scope module D3 $end
$var wire 1 : a $end
$var wire 1 7 s0 $end
$var wire 1 8 s1 $end
$var wire 1 . y3 $end
$var wire 1 / y2 $end
$var wire 1 0 y1 $end
$var wire 1 1 y0 $end
$var wire 1 > q $end
$var wire 1 ? p $end
$scope module D1 $end
$var wire 1 : a $end
$var wire 1 8 s $end
$var wire 1 ? y0 $end
$var wire 1 > y1 $end
$upscope $end
$scope module D2 $end
$var wire 1 ? a $end
$var wire 1 7 s $end
$var wire 1 1 y0 $end
$var wire 1 0 y1 $end
$upscope $end
$scope module D3 $end
$var wire 1 > a $end
$var wire 1 7 s $end
$var wire 1 / y0 $end
$var wire 1 . y1 $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
$end
#5
17
1*
1$
#10
1"
07
0*
0$
18
1+
1#
#15
0"
1!
17
1*
1$
#20
1(
1-
0!
07
0*
0$
08
0+
0#
19
1)
#25
0(
1'
17
1*
1$
#30
1"
0-
1&
0'
1,
07
0*
0$
18
1+
1#
#35
0&
0"
1%
1!
17
1*
1$
#40
15
1=
1;
0%
0!
0,
07
0*
0$
08
0+
0#
09
0)
16
#45
05
14
17
1*
1$
#50
1"
0=
13
04
1<
07
0*
0$
18
1+
1#
#55
03
0"
12
1!
17
1*
1$
#60
11
1(
1-
0;
1?
02
0<
0!
1:
07
0*
0$
08
0+
0#
19
1)
#65
01
0(
10
1'
17
1*
1$
#70
1"
0?
1/
0-
1&
00
0'
1>
1,
07
0*
0$
18
1+
1#
#75
0/
0&
0"
1.
1%
1!
17
1*
1$
#80
0.
0%
0>
0!
0,
0:
07
0*
0$
08
0+
0#
09
0)
06
#85
17
1*
1$
#90
1"
07
0*
0$
18
1+
1#
#95
0"
1!
17
1*
1$
#100
1(
1-
0!
07
0*
0$
08
0+
0#
19
1)
