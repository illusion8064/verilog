$date
	Wed Oct  2 01:36:14 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mux2_test $end
$var wire 1 ! y $end
$var reg 1 " a $end
$var reg 1 # b $end
$var reg 1 $ s $end
$scope module uut $end
$var wire 1 " a $end
$var wire 1 # b $end
$var wire 1 $ s $end
$var wire 1 ! y $end
$var wire 1 % y1 $end
$var wire 1 & y2 $end
$upscope $end
$upscope $end
$scope module mux4_test $end
$var wire 1 ' y $end
$var reg 1 ( a0 $end
$var reg 1 ) a1 $end
$var reg 1 * a2 $end
$var reg 1 + a3 $end
$var reg 1 , s0 $end
$var reg 1 - s1 $end
$scope module uut $end
$var wire 1 ( a0 $end
$var wire 1 ) a1 $end
$var wire 1 * a2 $end
$var wire 1 + a3 $end
$var wire 1 , s0 $end
$var wire 1 - s1 $end
$var wire 1 . y2 $end
$var wire 1 / y1 $end
$var wire 1 ' y $end
$scope module A1 $end
$var wire 1 ( a $end
$var wire 1 ) b $end
$var wire 1 , s $end
$var wire 1 / y $end
$var wire 1 0 y1 $end
$var wire 1 1 y2 $end
$upscope $end
$scope module A2 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 , s $end
$var wire 1 . y $end
$var wire 1 2 y1 $end
$var wire 1 3 y2 $end
$upscope $end
$scope module A3 $end
$var wire 1 / a $end
$var wire 1 . b $end
$var wire 1 - s $end
$var wire 1 ' y $end
$var wire 1 4 y1 $end
$var wire 1 5 y2 $end
$upscope $end
$upscope $end
$upscope $end
$scope module mux8_test $end
$var wire 1 6 y $end
$var reg 1 7 a0 $end
$var reg 1 8 a1 $end
$var reg 1 9 a2 $end
$var reg 1 : a3 $end
$var reg 1 ; a4 $end
$var reg 1 < a5 $end
$var reg 1 = a6 $end
$var reg 1 > a7 $end
$var reg 1 ? s0 $end
$var reg 1 @ s1 $end
$var reg 1 A s2 $end
$scope module uut $end
$var wire 1 7 a0 $end
$var wire 1 8 a1 $end
$var wire 1 9 a2 $end
$var wire 1 : a3 $end
$var wire 1 ; a4 $end
$var wire 1 < a5 $end
$var wire 1 = a6 $end
$var wire 1 > a7 $end
$var wire 1 ? s0 $end
$var wire 1 @ s1 $end
$var wire 1 A s2 $end
$var wire 1 B y2 $end
$var wire 1 C y1 $end
$var wire 1 6 y $end
$scope module A1 $end
$var wire 1 7 a0 $end
$var wire 1 8 a1 $end
$var wire 1 9 a2 $end
$var wire 1 : a3 $end
$var wire 1 ? s0 $end
$var wire 1 @ s1 $end
$var wire 1 D y2 $end
$var wire 1 E y1 $end
$var wire 1 C y $end
$scope module A1 $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 ? s $end
$var wire 1 E y $end
$var wire 1 F y1 $end
$var wire 1 G y2 $end
$upscope $end
$scope module A2 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ? s $end
$var wire 1 D y $end
$var wire 1 H y1 $end
$var wire 1 I y2 $end
$upscope $end
$scope module A3 $end
$var wire 1 E a $end
$var wire 1 D b $end
$var wire 1 @ s $end
$var wire 1 C y $end
$var wire 1 J y1 $end
$var wire 1 K y2 $end
$upscope $end
$upscope $end
$scope module A2 $end
$var wire 1 ; a0 $end
$var wire 1 < a1 $end
$var wire 1 = a2 $end
$var wire 1 > a3 $end
$var wire 1 ? s0 $end
$var wire 1 @ s1 $end
$var wire 1 L y2 $end
$var wire 1 M y1 $end
$var wire 1 B y $end
$scope module A1 $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 ? s $end
$var wire 1 M y $end
$var wire 1 N y1 $end
$var wire 1 O y2 $end
$upscope $end
$scope module A2 $end
$var wire 1 = a $end
$var wire 1 > b $end
$var wire 1 ? s $end
$var wire 1 L y $end
$var wire 1 P y1 $end
$var wire 1 Q y2 $end
$upscope $end
$scope module A3 $end
$var wire 1 M a $end
$var wire 1 L b $end
$var wire 1 @ s $end
$var wire 1 B y $end
$var wire 1 R y1 $end
$var wire 1 S y2 $end
$upscope $end
$upscope $end
$scope module A3 $end
$var wire 1 C a $end
$var wire 1 B b $end
$var wire 1 A s $end
$var wire 1 6 y $end
$var wire 1 T y1 $end
$var wire 1 U y2 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0U
1T
0S
1R
0Q
0P
0O
1N
1M
0L
0K
1J
0I
1H
0G
1F
1E
1D
1C
1B
0A
0@
0?
0>
0=
1<
1;
0:
19
08
17
16
05
04
03
02
01
00
0/
0.
0-
0,
1+
0*
1)
0(
0'
0&
0%
0$
1#
0"
0!
$end
#20
06
0T
0C
0J
0E
0D
0F
0H
0N
1O
1?
1-
#40
16
1T
1C
1K
0B
1E
1D
1'
0R
1F
1H
1N
1M
14
1/
1.
0O
11
13
1@
0?
0-
1,
#50
1!
1&
1$
#60
06
0T
0C
0K
0E
0D
0F
0H
0N
04
1O
15
1?
1-
#80
16
1U
1C
1B
1J
1R
1E
1D
1F
1H
1N
1M
0O
1A
0@
0?
